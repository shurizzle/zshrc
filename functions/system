#!/usr/bin/env zsh

function rcntln
{
  local FOLDER=${1} || ${PWD}
  for i ("${FOLDER}"/**/*) {
    [ -f "${i}" ] && wc -l "${i}" | sed -r 's/^([0-9]+).*$/\1/g'
  } | tr '\n' '+' | sed 's/+$/\n/' | bc | sed 's/$/ TOTAL/'
}

function killflash
{
    for i in `ps aux | grep -P 'lib(gc)?flashplayer.so' | awk '{print $2}'`; do
        kill -9 $i
    done
}

function is_mp3
{
    : ${1?"USAGE: is_mp3 <file>"}
    grep -a '^ID3'$'\x03' "${1}" &>/dev/null || return 1
    echo 1 && return 0
}

if is-command emerge
then
  function riemerge
  {
    emerge --skip-first || riemerge
  }

  function remerge
  {
    emerge "$@" || riemerge
  }
fi

function sortfile
{
  sort -S"$(du "${1}" | awk '{print $1}')K" "${1}" -o "${1}"
}

function waitpid
{
  while kill -0 "${1}" 2>/dev/null; do
    sleep 1
  done
}

function waitpids
{
  for pid in $@; do
    waitpid $pid
  done
}

function alarm
{
  zmodload zsh/sched || return 1

  local dte1="$(date --date "${1}" +%s)"
  local dte2="$(date +%s)"
  local diffSec="$((dte1 - dte2))"

  ((diffSec < 0)) && return 1

  for ((i=0; $i < 60; i+=5)); do
    sched "+$((diffSec + i * 60))" "$PLAYER ${(q)2:-$ALARM}"
  done
  amixer set Master 100% &>/dev/null
}

function dealarm
{
  for i ({1..$(sched | wc -l)}) sched -1
}

function rewake
{
  slock &
  alarm "${1}"
  local dte1="$(date --date "${1}" +%s)"
  local dte2="$(date +%s)"
  local diffSec="$((dte1 - dte2 - 5))"
  sudo rtcwake -m mem -s "${diffSec}"
}

function colours
{
  for i in {0..255} ; do
    print "\x1b[38;5;${i}mcolour${i}"
  done
}

function bench
{
  for ((i = 1;i <= $#; i++)) {
    local X="$(eval "echo \"\${$i}\"")"
    (
      echo -ne '\e[32;1m$\e[0m ' && echo -n "$X"
      local RES="$( (time (eval "$X" &>/dev/null)) 2>&1 || echo -ne ' (\e[31;1m'"$?"'\e[0m)' >&2)"
      echo -ne '\n\e[34;1m->\e[0m' && echo "$RES"
    ) 2>&1
  }
}

function cdvim
{
  local CD="${1}"
  shift
  cd "${CD}"
  vim "$@"
  cd -
}

function loadavg
{
  local one two three lopo
  < /proc/loadavg read one two three lopo
  echo "$one $two $three"
}

function TTS
{
  mplayer 'http://translate.google.com/translate_tts?tl=it&q='"$(url_encode "$(echo $@)")" -ao pcm:file=/dev/stdout -novideo 2>/dev/null
}

# vim:ts=2:bs=2:sw=2:et:ft=zsh:fdm=marker
